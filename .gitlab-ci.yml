stages:
  - test
  - deploy

variables:
  DOCKER_IMAGE_NAME: "choibenassist-backend"
  DOCKER_HOST: unix:///var/run/docker.sock

# Test stage - Docker内でテスト実行
test:
  stage: test
  tags:
    - shell
  script:
    - echo "🧪 Running tests in Docker..."
    - |
      # 事前クリーンアップ
      docker system prune -f --volumes
      
      # テスト用環境変数ファイル作成
      cat > .env.test << EOF
      GEMINI_API_KEY=${GEMINI_API_KEY}
      SUPABASE_URL=${SUPABASE_URL}
      SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      API_SECRET_KEY=${API_SECRET_KEY}
      DEBUG=True
      ENVIRONMENT=test
      EOF
    - |
      # Dockerでテスト実行
      docker system prune -f
      docker build --no-cache -t ${DOCKER_IMAGE_NAME}:test .
      docker run --rm --env-file .env.test ${DOCKER_IMAGE_NAME}:test sh -c "
        pip install --no-cache-dir -r requirements-dev.txt &&
        pytest tests/ -v &&
        black --check app/ tests/
      "
      docker rmi ${DOCKER_IMAGE_NAME}:test
    - echo "✅ Tests completed!"
  only:
    - main

# Deploy stage - 本番デプロイ
deploy:
  stage: deploy
  tags:
    - shell
  script:
    - echo "Deploying to production..."
    - |
      # 本番用環境変数ファイル作成
      cat > .env.production << EOF
      GEMINI_API_KEY=${GEMINI_API_KEY}
      SUPABASE_URL=${SUPABASE_URL}
      SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      API_SECRET_KEY=${API_SECRET_KEY}
      DEBUG=False
      ENVIRONMENT=production
      EOF
    - |
      # Dockerイメージビルド
      docker system prune -f
      docker build --no-cache -t ${DOCKER_IMAGE_NAME}:production .
      
      # 既存コンテナ停止・削除
      docker stop choibenassist-production || true
      docker rm -f choibenassist-production || true
      
      # 新しいコンテナ起動
      docker run -d \
        --name choibenassist-production \
        --restart always \
        -p 8000:8000 \
        --env-file .env.production \
        ${DOCKER_IMAGE_NAME}:production
    - |
      # ヘルスチェック
      echo "🏥 Health check..."
      sleep 30
      curl -f http://localhost:8000/api/health
    - echo "✅ Deployment completed!"
  environment:
    name: production
  only:
    - main
